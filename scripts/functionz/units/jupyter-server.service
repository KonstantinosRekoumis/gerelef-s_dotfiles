# kernels:
# drop to a login shell `sudo machinectl shell jupyter@ /bin/bash`
#
# - java / kotlin: (requires jdk >=23)
#   ```
#   dnf copr enable @jbangdev/jbang  # install jbang, required
#   dnf install -y jbang
#   sudo machinectl shell jupyter@ /bin/bash 'jbang' 'install-kernel@jupyter-java' 'ijava'
#   sudo machinectl shell jupyter@ /bin/bash 'jbang' 'install-kernel@jupyter-java' 'jjava'
#   sudo machinectl shell jupyter@ /bin/bash 'jbang' 'install-kernel@jupyter-java' 'kotlin'
#   ```
#
# - julia:
#   ```
#   dnf install -y julia  # install lang
#   julia  # drop down to REPL
#   >>> using Pkg
#   >>> Pkg.add("IJulia")
#   ```

[Unit]
Description=The backend — i.e. core services, APIs, and REST endpoints — to Jupyter web applications.
After=network.target
RequiresMountsFor=~

[Service]
Type=simple
StandardOutput=journal
# this service file requires a dedicated system user as `jupyter`, with a home directory
#  sudo useradd -m -r -d /var/lib/jupyter -s /sbin/nologin jupyter
# this will create a `jupyter` user with home directory at `/var/lib`
# and it is the recommended behaviour for systemd service users

# you will probably want to run the following command, to apply our config:
# sudo cp -f ~/dotfiles/.config/.jupyter/jupyter_lab_config.py /var/lib/jupyter/.jupyter/
User=jupyter
Group=jupyter
# %h does not expand to the user's home when running as a system service,
#  it will however expand to /root/, since the SERVICE RUNNER is /root.
# all of this WOULD make sense if there was another systemd expansion that 
#  actually expanded to the user's $HOME (if it had one), but there isn't any,
#  therefore this is dumb as fuck
# UPDATE: the complaint above concerns the following (now changed) ExecStart
# ExecStart=jupyter-server --ServerApp.root_dir=/var/lib/jupyter
#  apparently, a workaround for the behaviour mentioned above,
#  is to set the 'WorkingDirectory' parameter to '~', and use relative paths
WorkingDirectory=~
ExecStart=jupyter-server --ServerApp.root_dir=.
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
