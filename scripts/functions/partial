#!/usr/bin/env -S python3 -S -OO

import sys


if sys.version_info.minor < 12:
    print(">= python3.12 required!", file=sys.stderr)
    sys.exit(1)


# HELP partial "fn {1} --arg {2}"; create a partial bash function

import re
import os
import sys
from time import time

def partialize(fn) -> str:
    """
    :returns: command to be executed.
    """
    for match in re.finditer(r"({([0-9]+)})", fn):
        fn = fn.replace(match.group(), f"${match.group(2)}")
    return fn


def partial(fn: str) -> None:
    template = """
    #!/usr/bin/env bash

    # This file was automatically generated by `partial`.
    #  More information @ gerelef/dotfiles
    {0}
    """
    fname = f"/tmp/prtl-{os.getpid() + int(time())}"
    try:
        with open(fname, mode="w") as file:
            file.write(template.format(partialize(fn)))
    except Exception as e:
        print(e, file=sys.stderr)
        if os.path.exists(fname):
            os.remove(fname)
        sys.exit(1)

    os.chmod(fname, 0o500)
    print(fname, file=sys.stdout)

if __name__ == "__main__":
    if len(sys.argv) < 1:
        exit(2)

    try:
        partial(sys.argv[1])
    except ValueError:
        print("Function to partialize must be given!", file=sys.stderr)
        exit(2)
