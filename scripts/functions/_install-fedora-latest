#!/usr/bin/env bash

# HELP install the latest personal fedora setup

# USEFUL COMMAND: sudo dnf whatprovides COMMAND
#  e.g. sudo dnf whatprovides nvidia-smi

add-gsettings-shortcut () (
    [[ $# -ne 3 ]] && return 2
    # $1 is the name
    # $2 is the command
    # $3 is the bind, in <Modifier>Key format

    custom_keybinds_enum="$(gsettings get org.gnome.settings-daemon.plugins.media-keys custom-keybindings | sed -e "s/@as//" | tr "'" "\"")"
    custom_keybinds_length="$(echo "$custom_keybinds_enum"  | jq ". | length")"

    keybind_version="custom$custom_keybinds_length"
    new_keybind_enumerator="/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/$keybind_version/"

    new_custom_keybinds_enum="$(echo "$custom_keybinds_enum" | jq -c ". += [\"$new_keybind_enumerator\"]" | tr '"' "'")"
    new_keybind_name=( "org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/$keybind_version/" "name" "$1" )
    new_keybind_command=( "org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/$keybind_version/" "command" "$2" )
    new_keybind_bind=( "org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/$keybind_version/" "binding" "$3" )

    gsettings set "org.gnome.settings-daemon.plugins.media-keys" "custom-keybindings" "$new_custom_keybinds_enum"
    gsettings set "${new_keybind_name[@]}"
    gsettings set "${new_keybind_command[@]}"
    gsettings set "${new_keybind_bind[@]}"

    #gsettings set org.gnome.settings-daemon.plugins.media-keys custom-keybindings "[<altered_list>]"
    #gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ name '<newname>'
    #gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ command '<newcommand>'
    #gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ binding '<key_combination>'
)

configure-residual-permissions () (
    _echo-status "-------------------CHANGING ROOT OWNERSHIP AND GROUPS IN HOME----------------"
    sudo chown "$REAL_USER" "$REAL_USER_HOME"
    chgrp "$REAL_USER" "$REAL_USER_HOME"

    # everything in home should be owned by the user and in the user's group
    # this filter finds which f
    find "$REAL_USER_HOME" -user root -print0 2> /dev/null | while read -d $'\0' file; do
        _echo-debug "sudo chown chgrp $file"

        sudo chown "$REAL_USER" "$file"
        chgrp "$REAL_USER" "$file"
    done

    _echo-success "Done."
)

copy-dnf () (
    sudo tee "/etc/dnf/dnf.conf" <<-DNF_EOF
[main]
gpgcheck=1
installonly_limit=5
clean_requirements_on_remove=True
best=False
deltarpm=False
skip_if_unavailable=True
max_parallel_downloads=10
metadata_expire=1
keepcache=true
DNF_EOF
)

try-enabling-power-profiles-daemon () (
    sudo systemctl enable power-profiles-daemon.service
    sudo systemctl start power-profiles-daemon.service
    sleep 10  # sleep in order for the service to spin up
    readonly PLACEHOLDER_COUNT=$(powerprofilesctl list | grep placeholder | wc -l)
    if [[ $PLACEHOLDER_COUNT -gt 1 ]]; then
        sudo systemctl stop power-profiles-daemon.service
        sudo systemctl mask power-profiles-daemon.service
    fi
)

# man 5 sysctl.d
#    CONFIGURATION DIRECTORIES AND PRECEDENCE
#    ...
#    All configuration files are sorted by their filename in lexicographic order, regardless of which of the directories they reside in.
#    If multiple files specify the same option, the entry in the file with the lexicographically latest name will take precedence.
#    It is recommended to prefix all filenames with a two-digit number and a dash, to simplify the ordering of the files.

lower-swappiness () (
    sudo sh -c 'echo "vm.swappiness = 10" > "/etc/sysctl.d/90-swappiness.conf"'
)

raise-user-watches () (
    sudo sh -c 'echo "fs.inotify.max_user_watches = 600000" > "/etc/sysctl.d/90-max_user_watches.conf"'
)

raise-memory-map-counts () (
    # Increase the number of memory map areas a process may have. No need for it in fedora 39 or higher. Relevant links:
    # https://fedoraproject.org/wiki/Changes/IncreaseVmMaxMapCount
    # https://wiki.archlinux.org/title/gaming
    # https://kernel.org/doc/Documentation/sysctl/vm.txt
    sudo sh -c 'echo "vm.max_map_count=2147483642" > "/etc/sysctl.d/90-max_map_count.conf"'
)

cap-nproc-count () (
    [[ -z "$REAL_USER" ]] && return 1;

    sudo sh -c "echo \"$REAL_USER 'hard nproc 10000'\" > '/etc/security/limits.d/90-nproc.conf'"
)

cap-max-logins-system () (
    sudo sh -c 'echo "* - maxsyslogins 20" > "/etc/security/limits.d/90-maxsyslogins.conf"'
)

create-convenience-sudoers () (
    # 440 is the default rights of /etc/sudoers file, so we're copying the rights just in case (even though visudo -f /etc/sudoers.d/test creates the file with 640)
    sudo sh -c 'echo "Defaults timestamp_timeout=120, pwfeedback" > "/etc/sudoers.d/convenience-defaults"'
    sudo chmod 440 "/etc/sudoers.d/convenience-defaults"
)

install-gnome-essentials () (
    _echo-status "-------------------INSTALLING GNOME----------------"

    sudo dnf install -y --best --allowerasing "$INSTALLABLE_ESSENTIAL_DESKTOP_PACKAGES"
    sudo dnf install -y --best --allowerasing "$INSTALLABLE_GNOME_ESSENTIAL_PACKAGES"

    try-enabling-power-profiles-daemon

    sudo systemctl enable gdm
    login-as-service-user gdm "gsettings set org.gnome.desktop.interface clock-format '24h'"
    login-as-service-user gdm "gsettings set org.gnome.desktop.interface clock-show-date true"
    login-as-service-user gdm "gsettings set org.gnome.desktop.interface clock-show-seconds true"
    login-as-service-user gdm "gsettings set org.gnome.desktop.interface clock-show-weekday true"
    login-as-service-user gdm "gsettings set org.gnome.desktop.interface font-antialiasing 'rgba'"
    login-as-service-user gdm "gsettings set org.gnome.desktop.interface font-hinting 'full'"
    login-as-service-user gdm "gsettings set org.gnome.desktop.peripherals.keyboard numlock-state false"
    login-as-service-user gdm "gsettings set org.gnome.desktop.peripherals.keyboard remember-numlock-state false"
    login-as-service-user gdm "gsettings set org.gnome.desktop.peripherals.keyboard repeat true"
    login-as-service-user gdm "gsettings set org.gnome.desktop.peripherals.keyboard repeat-interval 25"
    login-as-service-user gdm "gsettings set org.gnome.desktop.peripherals.mouse double-click 250"
    login-as-service-user gdm "gsettings set org.gnome.desktop.peripherals.mouse middle-click-emulation false"
    login-as-service-user gdm "gsettings set org.gnome.desktop.peripherals.mouse natural-scroll false"
    login-as-service-user gdm "gsettings set org.gnome.desktop.peripherals.mouse speed -0.2"
    login-as-service-user gdm "gsettings set org.gnome.desktop.peripherals.mouse accel-profile 'flat'"
    login-as-service-user gdm "gsettings set org.gnome.desktop.peripherals.touchpad disable-while-typing false"

    _echo-success "Done."
)


install-universal-necessities () (
    _echo-status "-------------------INSTALLING ESSENTIAL PACKAGES----------------"
    sudo dnf install -y --best --allowerasing "$INSTALLABLE_ESSENTIAL_PACKAGES"
    sudo dnf install -y --best --allowerasing "$INSTALLABLE_PIPEWIRE_PACKAGES"

    sudo dnf group install -y --best --allowerasing "hardware-support" "networkmanager-submodules" "printing"

    sudo dnf install -y --best --allowerasing "$INSTALLABLE_APPLICATION_PACKAGES"
    flatpak install --system --noninteractive -y "$INSTALLABLE_FLATPAKS"

    if _is-btrfs-rootfs || _is-btrfs-homefs; then
        _echo-status "Found BTRFS, installing tools..."
        sudo dnf install -y --best --allowerasing "$INSTALLABLE_BTRFS_TOOLS"
    fi

    # https://github.com/flameshot-org/flameshot/issues/3326#issuecomment-1855332738
    sudo tee "/usr/local/bin/flameshot-gui-workaround" <<GDM_END
#!/bin/bash
flameshot gui
GDM_END
    sudo chmod a+x "/usr/local/bin/flameshot-gui-workaround"
    flameshot config -m white
    _echo-debug "Configured flameshot."

    sudo tee "/usr/sbin/update-grub" <<GR_END
#!/bin/sh
set -e
exec grub2-mkconfig -o /boot/grub2/grub.cfg "$@"
GR_END

    sudo chown root:root "/usr/sbin/update-grub"
    sudo chmod 755 "/usr/sbin/update-grub"
    _echo-debug "Configured update-grub."

    _echo-success "Done."
)

optimize-hardware () (
    _echo-status "-------------------OPTIMIZING HARDWARE----------------"

    if _is-uefi; then
        _echo-status "Updating UEFI with fwupdmgr..."
        fwupdmgr refresh --force -y
        fwupdmgr get-updates -y
        fwupdmgr update -y
    fi

    # s2 sleep
    if _is-mobile-type; then
        sudo grubby --update-kernel=ALL --args="mem_sleep_default=s2idle"
        if !is_service_running power-profiles-daemon; then
            sudo systemctl mask power-profiles-daemon
            sudo dnf install -y --best --allowerasing tlp tlp-rdw powertop
            powertop --auto-tune
        fi
    fi

    if _is-desktop-type; then
        _echo-status "Disabling mobile-gpu specific service (https://forums.developer.nvidia.com/t/no-matching-gpu-found-with-510-47-03/202315/5)"
        sudo systemctl disable nvidia-powerd.service
        return
    fi

    _echo-success "Done."
)

optimize-laptop-battery () (
    # if we're on anything but a mobile device, gtfo
    ! _is-mobile-type && return 0

    _echo-status "-------------------OPTIMIZING LAPTOP BATTERY----------------"
    _echo-status "Found mobile device type"
    # s3 sleep
    sudo grubby --update-kernel=ALL --args="mem_sleep_default=s2idle"
    sudo dnf install -y --best --allowerasing "$INSTALLABLE_PWR_MGMNT"
    sudo powertop --auto-tune

    _echo-success "Done."
)

install-proprietary-nvidia-drivers () (
    # install nvidia drivers if we have an NVIDIA card
    if ! _is-nvidia-gpu; then return; fi

    readonly NVIDIA_GPU="$(_nvidia-gpu-model)"

    _echo-status "-------------------INSTALLING NVIDIA DRIVERS----------------"
    _echo-status "Found $NVIDIA_GPU!"

    sudo dnf install -y --best --allowerasing "$INSTALLABLE_NVIDIA_DRIVERS"

    # check arch wiki, these enable DRM
    sudo grubby --update-kernel=ALL --args="nvidia-drm.modeset=1"
    sudo grubby --update-kernel=ALL --args="nvidia-drm.fbdev=1"
    _echo-debug "Added modeset & fbdev."

    _echo-debug "Regenerating akmod build..."
    sudo akmods --force && dracut --force --regenerate-all
    _echo-debug "Regenerated akmod build."

    _echo-important "Script will hang while NVIDIA Drivers are being built."
    _echo-important "Please note this can take upwards of five (5) minutes to finish."
    while ! modinfo -F version nvidia; do
        echo "Beep boop."
        sleep 10
        _echo-status "Waiting..."
    done
    _echo-success "NVIDIA drivers built."

    if _is-uefi && [[ $(mokutil --sb-state 2> /dev/null) ]]; then
        # https://blog.monosoul.dev/2022/05/17/automatically-sign-nvidia-kernel-module-in-fedora-36/
        # https://github.com/NVIDIA/yum-packaging-precompiled-kmod/blob/main/UEFI.md
        # the official NVIDIA instructions recommend installing the driver first
        # however, we're going to install the drivers *after* possibly enrolling MOK
        # since we shouldn't reboot/shutdown for a few minutes after installing akmod drivers
        # since they'll be compiling in the background!
        # Their recommendations talk about kmod, not akmod, but the process should be the same
        # FIXME needs checking that this actually works.
        echo-important "You only have to do this once. Do NOT re-enroll MOK a second time."
        if ask-user 'Do you want to enroll MOK and restart afterwards?'; then
            _echo-important "Make sure you enroll MOK when you restart."

            _echo-status "Signing GPU drivers..."
            sudo kmodgenca -a
            sudo mokutil --import /etc/pki/akmods/certs/public_key.der

            _echo-important "Finished signing GPU drivers."
            sudo systemctl reboot
        fi
    else
        _echo-unexpected "UEFI not found; please restart & use UEFI in order to sign drivers..."
    fi
)

install-media-codecs () (
    _echo-status "-------------------INSTALLING CODECS / H/W VIDEO ACCELERATION----------------"

    # based on https://github.com/devangshekhawat/Fedora-39-Post-Install-Guide
    sudo dnf install -y --best --allowerasing gstreamer1-plugins-{bad-\*,good-\*,base}
    sudo dnf install -y --best --allowerasing lame\*
    sudo dnf install -y --best --allowerasing "gstreamer1-plugin-openh264" "gstreamer1-libav"
    sudo dnf group install -y --best --allowerasing --with-optional "multimedia"

    # extra by me
    sudo dnf install -y --best --allowerasing "obs-studio" \
    "obs-studio-plugin-vkcapture" \
    "obs-studio-plugin-vlc-video" \
    "obs-studio-plugin-webkitgtk" \
    "obs-studio-plugin-x264"

    sudo dnf install -y --best --allowerasing "ffmpeg" "gstreamer-ffmpeg" "ffmpeg-libs" "libva" "libva-utils"
    sudo dnf reinstall -y "/etc/yum.repos.d/fedora-cisco-openh264.repo"
    sudo dnf install -y --best --allowerasing "openh264" "gstreamer1-plugin-openh264" "mozilla-openh264"
)

install-gaming-packages () (
    _echo-status "-------------------INSTALLING GAMING PACKAGES----------------"
    sudo dnf install -y --best --allowerasing "steam" "gamescope"
    flatpak install --system --noninteractive -y "com.discordapp.Discord"
    # vulkan drivers are required for proton-ge to work
    sudo dnf install -y --best --allowerasing "protontricks" "vulkan" "vulkan-loader" "vulkan-loader.i686"
    update-compat-layers --steam --golden-egg

    # FIX FOR INPUT LAG / KEYBOARD KEYS GETTING STUCK:
    #  https://discussion.fedoraproject.org/t/ibus-daemon-introduces-delays-and-even-locks-keyboard-up-in-some-steam-games/118095/4
    #  https://github.com/ibus/ibus/issues/2618
    #  https://gitlab.gnome.org/GNOME/mutter/-/issues/3369
    #  https://www.google.com/search?client=firefox-b-d&q=XMODIFIERS%3D%E2%80%9C%40im%3Dnull%E2%80%9D
    #  https://www.linuxquestions.org/questions/linux-general-1/what-does-xmodifiers%3D-%40im%3Dnull-do-exactly-4175671523/
    #  https://github.com/chrislo27/PolyrhythmMania/issues/24
    sudo sh -c 'echo "XMODIFIERS=@im=null" >> /etc/environment'
    sudo chmod 644 "/etc/environment"
    _echo-success "Done."
)

install-virtualization-packages () (
    _echo-status "-------------------INSTALLING VIRTUALIZATION PACKAGES----------------"
    sudo dnf install -y --best --allowerasing "$INSTALLABLE_VIRTUALIZATION_PACKAGES"
    if _is-virtual-machine; then
        sudo dnf install -y --best --allowerasing "virtualbox-guest-additions"
    fi
    usermod -a -G libvirt $REAL_USER
    _echo-success "Done."
)

install-dev-tools () (
    _echo-status "-------------------INSTALLING DEV TOOLS----------------"

    sudo dnf group install -y --best --allowerasing  "c-development" "development-tools"
    sudo dnf install -y --best --allowerasing "$INSTALLABLE_DEV_PKGS"
    flatpak install --system --noninteractive -y "net.werwolv.ImHex"

    _echo-success "Done."
)

configure-system-defaults () (
    _echo-status "-------------------SETTING UP SYSTEM DEFAULTS----------------"
    lower-swappiness
    _echo-success "Lowered swappiness."
    raise-user-watches
    _echo-success "Raised user watches."
    cap-nproc-count
    _echo-success "Capped maximum number of processes."
    cap-max-logins-system
    _echo-success "Capped max system logins."
    create-convenience-sudoers
    _echo-success "Created sudoers.d convenience defaults."

    _echo-success "Done."
)

tweak-minor-details () (
    _echo-status "-------------------TWEAKING MINOR DETAILS----------------"
    # https://github.com/tommytran732/Linux-Setup-Scripts/blob/main/Fedora-Workstation-36.sh
    sudo systemctl enable fstrim.timer
    _echo-debug "Enabled fs trim timer."
    sudo timedatectl set-local-rtc '0' # for fixing dual boot time inconsistencies
    _echo-debug "Set local rtc to 0."
    sudo hostnamectl hostname "$DISTRIBUTION_NAME"
    _echo-debug "Updated hostname."
    # if the statement below doesnt work, check this out
    #  https://old.reddit.com/r/linuxhardware/comments/ng166t/s3_deep_sleep_not_working/
    # stop network manager from waiting until online, improves boot times
    sudo systemctl disable NetworkManager-wait-online.service
    _echo-debug "Disabled NetworkManager-wait-online.service"
    # if GNOME, stop Software from autostarting & updating in the background, no reason
    _is-gnome-session && sudo rm /etc/xdg/autostart/org.gnome.Software.desktop 2> /dev/null

    _echo-success "Done."
)

configure-ssh-defaults () (
    # if the directory already exists, abandon
    [[ -d "$REAL_USER_HOME/.ssh" ]] && return

    _echo-status "-------------------GENERATING SSH KEY----------------"
    mkdir -p "$REAL_USER_HOME/.ssh"
    ssh-keygen -q -t ed25519 -N '' -C "$REAL_USER@$DISTRIBUTION_NAME" -f "$REAL_USER_HOME/.ssh/id_ed25519" -P "" <<< $'\ny' >/dev/null 2>&1
    cat "$REAL_USER_HOME/.ssh/id_ed25519.pub"
    # this is REQUIRED for ssh related thingies; key must NOT be readable by anyone else but this user
    sudo chown "$REAL_USER" "$REAL_USER_HOME/.ssh/id_ed25519"
    sudo chmod 700 "$REAL_USER_HOME/.ssh/id_ed25519"
    _echo-success "Done."
)

shopt -s globstar
shopt -s dotglob
shopt -s nullglob

readonly PATH="$PATH:$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )/scripts/functions"
readonly DEBUG_SETUP_ON="yes"
readonly DIR=$(dirname -- "$BASH_SOURCE")
readonly REAL_USER="${SUDO_USER:-$(whoami)}"
# https://unix.stackexchange.com/questions/247576/how-to-get-home-given-user
readonly REAL_USER_HOME=$(eval echo "~$REAL_USER")

#######################################################################################################

readonly DISTRIBUTION_NAME="fedora$(rpm -E %fedora)"

#######################################################################################################

readonly INSTALLABLE_ESSENTIAL_DESKTOP_PACKAGES="\
ssh \
glx-utils \
mesa-dri-drivers \
mesa-vulkan-drivers \
plymouth \
plymouth-system-theme \
power-profiles-daemon \
power-profiles-daemon-docs \
"

#######################################################################################################

readonly INSTALLABLE_GNOME_ESSENTIAL_PACKAGES="\
gdm \
gnome-shell \
gnome-session \
gnome-session-wayland-session \
gnome-keyring \
gnome-keyring-pam \
gnome-power-manager \
xdg-desktop-portal-gnome \
NetworkManager-ssh-gnome \
NetworkManager-adsl \
NetworkManager-bluetooth \
NetworkManager-iodine-gnome \
NetworkManager-l2tp-gnome \
NetworkManager-libreswan-gnome \
NetworkManager-openconnect-gnome \
NetworkManager-openvpn-gnome \
NetworkManager-ppp \
NetworkManager-pptp-gnome \
NetworkManager-vpnc-gnome \
NetworkManager-wifi \
NetworkManager-wwan \
gnome-bluetooth \
gnome-bluetooth-libs \
gnome-settings-daemon \
gnome-browser-connector \
gnome-logs \
"

readonly INSTALLABLE_GNOME_APPLICATION_PACKAGES="\
nautilus \
gnome-disk-utility \
gnome-text-editor \
gnome-system-monitor \
"

readonly INSTALLABLE_ADWAITA_PACKAGES="\
adwaita-icon-theme \
adwaita-cursor-theme \
adwaita-gtk2-theme \
adw-gtk3-theme \
adwaita-qt5 \
qadwaitadecorations-qt5 \
qadwaitadecorations-qt6 \
adwaita-qt6 \
"

readonly INSTALLABLE_ADWAITA_FLATPAKS="\
org.gtk.Gtk3theme.adw-gtk3 \
org.gtk.Gtk3theme.adw-gtk3-dark \
"

readonly INSTALLABLE_GNOME_FLATPAKS="\
de.haeckerfelix.Fragments \
org.gnome.Snapshot \
"

readonly INSTALLABLE_GNOME_EXTENSIONS="\
gnome-extensions-app \
gnome-shell-extension-places-menu \
gnome-shell-extension-forge \
gnome-shell-extension-appindicator \
"

#######################################################################################################

# replace grub2 with systemd-boot when we get rid of all the issues
#  regarding proprietary NVIDIA Drivers, and signing them for UEFI
#  apparently, this is the way going forward with unified kernel image
#  https://fedoraproject.org/wiki/Changes/Unified_Kernel_Support_Phase_2
#  so we eon't replace it manually, it'll be replaced be Red Hat themselves
# TODO add systemd-bsod when it becomes available on fedora
readonly INSTALLABLE_ESSENTIAL_PACKAGES="\
setroubleshoot \
setroubleshoot-plugins \
openvpn \
openssl \
python3-cairo \
"

readonly INSTALLABLE_PIPEWIRE_PACKAGES="\
pipewire \
pipewire-alsa \
pipewire-codec-aptx \
pipewire-gstreamer \
pipewire-libs \
pipewire-pulseaudio \
pipewire-utils \
wireplumber \
wireplumber-libs \
"

readonly INSTALLABLE_APPLICATION_PACKAGES="\
firefox \
chromium \
fedora-chromium-config \
flameshot \
gimp \
krita \
evince \
libreoffice \
sqlitebrowser \
piper \
pulseeffects \
"

readonly INSTALLABLE_FLATPAKS="\
com.spotify.Client \
com.github.rafostar.Clapper \
io.gitlab.theevilskeleton.Upscaler \
com.github.tchx84.Flatseal \
"

readonly INSTALLABLE_BTRFS_TOOLS="\
btrfs-assistant \
timeshift \
"

readonly INSTALLABLE_NVIDIA_DRIVERS="\
gcc \
kernel-headers \
kernel-devel \
akmod-nvidia \
xorg-x11-drv-nvidia \
xorg-x11-drv-nvidia-libs \
xorg-x11-drv-nvidia-cuda \
xorg-x11-drv-nvidia-power \
nvidia-gpu-firmware \
nvidia-modprobe \
"

readonly INSTALLABLE_PWR_MGMNT="\
tlp \
tlp-rdw \
powertop \
"

readonly INSTALLABLE_EXTRAS="\
steam \
gamescope \
"

readonly INSTALLABLE_VIRTUALIZATION_PACKAGES="\
swtpm \
swtpm-tools \
virt-manager \
libvirt-devel \
virt-top \
libguestfs-tools \
guestfs-tools \
bridge-utils \
libvirt \
virt-install \
qemu-kvm \
qemu-audio-pipewire \
"

readonly INSTALLABLE_DEV_PKGS="\
git \
git-delta \
gcc \
clang \
vulkan \
meson \
curl \
cmake \
ninja-build \
java-latest-openjdk \
java-latest-openjdk-devel \
tldr \
"

# NOTE: these are global and should be treated as desktop agnostic
readonly UNINSTALLABLE_BLOAT="\
rhythmbox \
totem \
cheese \
gnome-tour \
gnome-weather \
gnome-terminal \
gnome-software \
gnome-remote-desktop \
gnome-font-viewer \
gnome-characters \
gnome-classic-session \
gnome-initial-setup \
gnome-boxes \
gnome-calculator \
gnome-contacts \
gnome-maps \
gnome-clocks \
gnome-connections \
gnome-shell-extension-gamemode \
gnome-shell-extension-background-logo \
"

#######################################################################################################

[[ "${BASH_SOURCE[0]}" != "${0}" ]] && return

# DEPENDENCIES FOR THE CURRENT SCRIPT
sudo dnf install -y --best --allowerasing flatpak curl plocate pciutils udisks2 dnf5

# change dnf4 to dnf5 (preview/unstable: is supposed to be shipped with fedora-41)
update-alternatives --install /usr/bin/sudo dnf sudo dnf /usr/bin/dnf5 1
sudo dnf install -y --best --allowerasing "dnf5-command(config-manager)"

if ! ping -q -c 1 -W 1 google.com > /dev/null; then
    _echo-unexpected "Network connection was not detected."
    _echo-unexpected "This script needs network connectivity to continue."
    exit 1
fi

# improve sudo dnf performance
copy-dnf

# for some reason this repository is added on every new install, it's NOT needed since we use toolbox
sudo dnf copr remove -y --skip-broken phracek/PyCharm 2> /dev/null
sudo dnf install -y --best --allowerasing "https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm" # free rpmfusion
sudo dnf install -y --best --allowerasing "https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm" # nonfree rpmfusion

# no requirement to add flathub ourselves anymore in f38; it should be enabled by default. however, it may not be, most likely by accident, so this is a failsafe
flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo 2> /dev/null
flatpak remote-delete fedora 2> /dev/null
flatpak remote-delete fedora-testing 2> /dev/null

sudo dnf update -y
sudo dnf upgrade -y --refresh

#######################################################################################################

# if there's no desktop environment running...
if [[ -z $XDG_CURRENT_DESKTOP ]]; then
    # run installer ...
    install-gnome-essentials

    _echo-important "Making sure we're booting into a DE next time we boot..."
    sudo systemctl set-default graphical.target
    sudo systemctl reboot
fi


sudo dnf install -y --best --allowerasing "alacritty"
if is-gnome-session; then
    sudo dnf install -y --best --allowerasing "$INSTALLABLE_GNOME_APPLICATION_PACKAGES"
    sudo dnf install -y --best --allowerasing "$INSTALLABLE_ADWAITA_PACKAGES" "$INSTALLABLE_GNOME_EXTENSIONS"
    flatpak install --system --noninteractive -y "$INSTALLABLE_ADWAITA_FLATPAKS"
    flatpak install --system --noninteractive -y "$INSTALLABLE_GNOME_FLATPAKS"
fi

# this needs to be up-to-date for some commands
sudo updatedb 2> /dev/null
if [[ ! $? -eq 0 ]]; then
    _echo-unexpected "updatedb errored, retrying with absolute path"
    sudo /usr/sbin/updatedb
fi

#######################################################################################################
# user options here, ask most of the stuff ahead of time.

_echo-important "You will be asked a series of questions ahead of time, so you can go semi-AFK while installing."
_echo-important "Note that NVIDIA drivers require manual confirmation for MOK enrollment, and this cannot be automated"
_echo-important " due to its intrusive nature."

ask-user 'Do you want to install virtualization packages?' && INSTALL_VIRTUALIZATION="yes"
ask-user 'Do you want to install gaming packages?' && INSTALL_GAMING="yes"

ask-user 'Do you want to install development tools?' && INSTALL_DEV_TOOLS="yes"
ask-user 'Do you want to install JetBrains Toolbox?' && INSTALL_JETBRAINS="yes"
ask-user 'Do you want to install Zed Text Editor?' && INSTALL_ZED="yes"
ask-user 'Do you want to install Visual Studio Code?' && INSTALL_VSC="yes"
ask-user 'Do you want to install Sublime Text Editor?' && INSTALL_SUBLIME="yes"
ask-user 'Do you want to install zeno/scrcpy?' && INSTALL_SCRCPY="yes"
ask-user 'Do you want to install zeno/scrcpy?' && INSTALL_SCRCPY="yes"

#######################################################################################################


sudo dnf remove -y "$UNINSTALLABLE_BLOAT"

install-universal-necessities
install-media-codecs
install-proprietary-nvidia-drivers
optimize-hardware
optimize-laptop-battery

configure-system-defaults
tweak-minor-details
configure-ssh-defaults

#######################################################################################################
# user-submitted opts

[[ -n "$INSTALL_VIRTUALIZATION" ]] && install-virtualization-packages
[[ -n "$INSTALL_GAMING" ]] && install-gaming-packages
[[ -n "$INSTALL_DEV_TOOLS" ]] && install-dev-tools
[[ -n "$INSTALL_JETBRAINS" ]] && update-jetbrains-toolbox
[[ -n "$INSTALL_VSC" ]] && update-visual-studio-code
[[ -n "$INSTALL_ZED" ]] && update-zed-text-editor
[[ -n "$INSTALL_SUBLIME" ]] && update-sublime-text-editor
[[ -n "$INSTALL_ZED" ]] && sudo dnf remove -y "gnome-text-editor" "gedit"
[[ -n "$INSTALL_VSC" ]] && sudo dnf remove -y "gnome-text-editor" "gedit"
[[ -n "$INSTALL_SUBLIME" ]] && sudo dnf remove -y "gnome-text-editor" "gedit"

if [[ -n "$INSTALL_SCRCPY" ]]; then
    _echo-status "Installing zeno/scrcpy ..."
    sudo dnf copr enable -y zeno/scrcpy
    sudo dnf install -y --best --allowerasing scrcpy adb
    sudo systemctl enable adb
fi

#######################################################################################################

configure-residual-permissions

_echo-important "Make sure to restart your PC after making all the necessary adjustments."
_echo-important "Remember to add a permanent mount point for internal storage partitions."

mapfile -t parts < <(blkid -o list | grep --invert-match "crypto_" | grep -i "not mounted" | awk '{ print $1 }')
[[ -n "$parts" ]] && _echo-important "--------------------------- POSSIBLE FSTAB PARTITIONS ---------------------------"
for part in "${parts[@]}"; do
    part_name=$(echo $part | tr '/' ' ' | awk '{ print $NF }')
    # 512 size blocks, divided by 2, divided by 1024*1024
    part_size=$(( $(cat /sys/class/block/$part_name/size)/2097152 ))
    # if it's a really small partition, it's probably something like a uefi/bootmenu partition, skip it
    [[ $part_size -lt 2 ]] && continue

    _echo-important "Found PARTITION $part with SIZE $part_size GB"
    _echo-important "Mount with mount --mkdir $part $REAL_USER_HOME/MOUNTPOINT"
    _echo-important "For permanently mounted partitions add $part to fstab as: "
    _echo-important "$part /MOUNTPOINT auto rw,user,exec,nosuid,nodev,nofail,auto,x-gvfs-show,x-gvfs-name=YOUR_NAME_HERE 0 0"
    _echo-important "If this is a drive you don't want to automatically mount, add $part to fstab as: "
    _echo-important "$part $REAL_USER_HOME/MOUNTPOINT auto rw,user,exec,nosuid,nodev,nofail,x-gvfs-show,x-gvfs-name=YOUR_NAME_HERE 0 0"
    _echo-important "--------"
    _echo-important "FOR HOME PARTITIONS add $part to fstab as:"
    _echo-important "$part /home/USERNAME auto defaults 0 2"
    _echo-important "Then run:"
    _echo-important "sudo mount -a && sudo useradd --home /home/USERNAME USERNAME && sudo sudo chown -R USERNAME:USERNAME /home/USERNAME"
    _echo-important "---------------------------"
done


if is-gnome-session; then
    _echo-important "Personalizing GNOME session..."
    _echo-important "Make sure to get the legacy GTK3 Theme Auto Switcher"
    _echo-important "https://extensions.gnome.org/extension/4998/legacy-gtk3-theme-scheme-auto-switcher/"

    _echo-status "Configuring all gsettings for $REAL_USER . . ."
    # theme settings
    gsettings set org.gnome.desktop.interface cursor-theme 'Adwaita'
    gsettings set org.gnome.desktop.interface icon-theme 'Adwaita'
    gsettings set org.gnome.desktop.interface gtk-theme 'adw-gtk3-dark'
    gsettings set org.gnome.desktop.interface color-scheme 'prefer-dark'

    # custom keybinds/shortcuts
    gsettings set org.gnome.settings-daemon.plugins.media-keys custom-keybindings '[]'
    add-gsettings-shortcut "resource-monitor" "gnome-system-monitor" "<Shift><Control>Escape"
    add-gsettings-shortcut "flameshot" "/usr/local/bin/flameshot-gui-workaround" "Print"
    add-gsettings-shortcut "alacritty" "alacritty" "<Super>t"

    # extension settings
    gsettings set org.gnome.shell enabled-extensions "['places-menu@gnome-shell-extensions.gcampax.github.com', 'appindicatorsupport@rgcjonas.gmail.com', 'forge@jmmaranan.com']"

    gsettings set org.gnome.shell.extensions.forge.keybindings con-split-horizontal "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings con-split-layout-toggle "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings con-split-vertical "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings con-stacked-layout-toggle "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings con-tabbed-layout-toggle "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings con-tabbed-showtab-decoration-toggle "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings focus-border-toggle "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings mod-mask-mouse-tile 'None'
    gsettings set org.gnome.shell.extensions.forge.keybindings prefs-open "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings prefs-tiling-toggle "['<Super>y']"
    gsettings set org.gnome.shell.extensions.forge.keybindings window-focus-down "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings window-focus-left "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings window-focus-right "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings window-focus-up "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings window-gap-size-decrease "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings window-gap-size-increase "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings window-move-down "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings window-move-left "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings window-move-right "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings window-move-up "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings window-resize-bottom-decrease "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings window-resize-bottom-increase "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings window-resize-left-decrease "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings window-resize-left-increase "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings window-resize-right-decrease "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings window-resize-right-increase "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings window-resize-top-decrease "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings window-resize-top-decrease "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings window-resize-top-increase "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings window-snap-center "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings window-snap-one-third-left "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings window-snap-one-third-right "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings window-snap-two-third-left "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings window-snap-two-third-right "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings window-swap-down "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings window-swap-last-active "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings window-swap-left "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings window-swap-right "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings window-swap-up "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings window-toggle-always-float "['<Super>c']"
    gsettings set org.gnome.shell.extensions.forge.keybindings window-toggle-float "[]"
    gsettings set org.gnome.shell.extensions.forge.keybindings workspace-active-tile-toggle "[]"
    gsettings set org.gnome.shell.extensions.forge primary-layout-mode 'tiling'
    gsettings set org.gnome.shell.extensions.forge float-always-on-top-enabled true
    gsettings set org.gnome.shell.extensions.forge preview-hint-enabled false
    gsettings set org.gnome.shell.extensions.forge auto-split-enabled true
    gsettings set org.gnome.shell.extensions.forge focus-border-toggle false
    gsettings set org.gnome.shell.extensions.forge split-border-toggle false
    gsettings set org.gnome.shell.extensions.forge move-pointer-focus-enabled false
    gsettings set org.gnome.shell.extensions.forge stacked-tiling-mode-enabled true
    gsettings set org.gnome.shell.extensions.forge tabbed-tiling-mode-enabled false
    gsettings set org.gnome.shell.extensions.forge tiling-mode-enabled true
    gsettings set org.gnome.shell.extensions.forge window-gap-hidden-on-single true
    gsettings set org.gnome.shell.extensions.forge window-gap-size 1
    gsettings set org.gnome.shell.extensions.forge window-gap-size-increment 1

    # nautilus & gtk3/gtk4 filechooser settings
    gsettings set org.gnome.nautilus.preferences show-create-link true
    gsettings set org.gnome.nautilus.preferences show-delete-permanently false
    gsettings set org.gnome.nautilus.preferences show-hidden-files true
    gsettings set org.gnome.nautilus.preferences recursive-search 'local-only'
    gsettings set org.gnome.nautilus.preferences mouse-use-extra-buttons false
    gsettings set org.gnome.nautilus.list-view default-zoom-level 'small'
    gsettings set org.gnome.nautilus.preferences default-folder-viewer 'list-view'
    gsettings set org.gtk.Settings.FileChooser clock-format '24h'
    gsettings set org.gtk.Settings.FileChooser date-format 'regular'
    gsettings set org.gtk.Settings.FileChooser show-hidden true
    gsettings set org.gtk.Settings.FileChooser show-size-column true
    gsettings set org.gtk.Settings.FileChooser show-type-column true
    gsettings set org.gtk.Settings.FileChooser sort-directories-first true
    gsettings set org.gtk.Settings.FileChooser type-format 'category'
    gsettings set org.gtk.Settings.FileChooser sidebar-width 140
    gsettings set org.gtk.gtk4.Settings.FileChooser clock-format '24h'
    gsettings set org.gtk.gtk4.Settings.FileChooser date-format 'regular'
    gsettings set org.gtk.gtk4.Settings.FileChooser show-hidden true
    gsettings set org.gtk.gtk4.Settings.FileChooser sort-directories-first true
    gsettings set org.gtk.gtk4.Settings.FileChooser type-format 'category'
    gsettings set org.gtk.gtk4.Settings.FileChooser view-type 'list'
    gsettings set org.gtk.gtk4.Settings.FileChooser sort-directories-first true

    # functional wm settings
    gsettings set org.gnome.desktop.wm.preferences action-double-click-titlebar 'toggle-maximize'
    gsettings set org.gnome.desktop.wm.preferences action-middle-click-titlebar 'none'
    gsettings set org.gnome.desktop.wm.preferences action-right-click-titlebar 'menu'
    gsettings set org.gnome.desktop.wm.preferences auto-raise false
    gsettings set org.gnome.desktop.wm.preferences auto-raise-delay 500
    gsettings set org.gnome.desktop.wm.preferences button-layout 'appmenu:close'
    gsettings set org.gnome.desktop.wm.preferences disable-workarounds false
    gsettings set org.gnome.desktop.wm.preferences focus-mode 'click'
    gsettings set org.gnome.desktop.wm.preferences focus-new-windows 'smart'
    gsettings set org.gnome.desktop.wm.preferences raise-on-click true
    gsettings set org.gnome.desktop.wm.preferences resize-with-right-button false
    gsettings set org.gnome.desktop.interface gtk-enable-primary-paste false
    gsettings set org.gnome.desktop.interface menubar-detachable false
    gsettings set org.gnome.desktop.interface overlay-scrolling true
    gsettings set org.gnome.desktop.interface show-battery-percentage true
    gsettings set org.gnome.shell.window-switcher current-workspace-only false

    # peripheral settings
    gsettings set org.gnome.desktop.peripherals.keyboard numlock-state false
    gsettings set org.gnome.desktop.peripherals.keyboard remember-numlock-state false
    gsettings set org.gnome.desktop.peripherals.keyboard repeat true
    gsettings set org.gnome.desktop.peripherals.keyboard repeat-interval 25
    gsettings set org.gnome.desktop.peripherals.mouse double-click 250
    gsettings set org.gnome.desktop.peripherals.mouse middle-click-emulation false
    gsettings set org.gnome.desktop.peripherals.mouse natural-scroll false
    gsettings set org.gnome.desktop.peripherals.mouse speed -0.2
    gsettings set org.gnome.desktop.peripherals.mouse accel-profile 'flat'
    gsettings set org.gnome.desktop.peripherals.touchpad accel-profile 'flat'
    gsettings set org.gnome.desktop.peripherals.touchpad click-method 'none'
    gsettings set org.gnome.desktop.peripherals.touchpad disable-while-typing false
    gsettings set org.gnome.desktop.peripherals.touchpad edge-scrolling-enabled false
    gsettings set org.gnome.desktop.peripherals.touchpad left-handed 'mouse'
    gsettings set org.gnome.desktop.peripherals.touchpad middle-click-emulation false
    gsettings set org.gnome.desktop.peripherals.touchpad natural-scroll true
    gsettings set org.gnome.desktop.peripherals.touchpad send-events 'enabled'
    gsettings set org.gnome.desktop.peripherals.touchpad speed 0.10000000000000001
    gsettings set org.gnome.desktop.peripherals.touchpad tap-and-drag false
    gsettings set org.gnome.desktop.peripherals.touchpad tap-and-drag-lock false
    gsettings set org.gnome.desktop.peripherals.touchpad tap-button-map 'default'
    gsettings set org.gnome.desktop.peripherals.touchpad tap-to-click false
    gsettings set org.gnome.desktop.peripherals.touchpad two-finger-scrolling-enabled true

    # privacy settings
    gsettings set org.gnome.desktop.media-handling automount true
    gsettings set org.gnome.desktop.media-handling automount-open true
    gsettings set org.gnome.desktop.media-handling autorun-never true
    gsettings set org.gnome.desktop.privacy disable-camera true
    gsettings set org.gnome.desktop.privacy disable-microphone false
    gsettings set org.gnome.desktop.privacy disable-sound-output false
    gsettings set org.gnome.desktop.privacy hide-identity false
    gsettings set org.gnome.desktop.privacy old-files-age 7
    gsettings set org.gnome.desktop.privacy recent-files-max-age -1
    gsettings set org.gnome.desktop.privacy remember-app-usage true
    gsettings set org.gnome.desktop.privacy remember-recent-files false
    gsettings set org.gnome.desktop.privacy remove-old-temp-files true
    gsettings set org.gnome.desktop.privacy remove-old-trash-files false
    gsettings set org.gnome.desktop.privacy show-full-name-in-top-bar false
    gsettings set org.gnome.desktop.privacy usb-protection true
    gsettings set org.gnome.desktop.privacy usb-protection-level 'lockscreen'
    gsettings set org.gnome.system.location enabled true
    gsettings set org.gnome.system.location max-accuracy-level 'city'

    # disable event sound
    gsettings set org.gnome.desktop.sound event-sounds false
    gsettings set org.gnome.desktop.sound allow-volume-above-100-percent true

    # disable hot corners
    gsettings set org.gnome.desktop.interface enable-hot-corners false

    # modal & checkalive timeouts
    gsettings set org.gnome.mutter attach-modal-dialogs true
    gsettings set org.gnome.mutter check-alive-timeout 15000

    # night light settings
    gsettings set org.gnome.settings-daemon.plugins.color night-light-enabled true
    gsettings set org.gnome.settings-daemon.plugins.color night-light-schedule-automatic false
    gsettings set org.gnome.settings-daemon.plugins.color night-light-schedule-from 0.0
    gsettings set org.gnome.settings-daemon.plugins.color night-light-schedule-to 6.0

    # keybinds/shortcuts
    gsettings set org.gnome.settings-daemon.plugins.media-keys volume-down "[]"
    gsettings set org.gnome.settings-daemon.plugins.media-keys volume-up "[]"
    gsettings set org.gnome.settings-daemon.plugins.media-keys mic-mute "[]"
    gsettings set org.gnome.shell.keybindings screenshot "[]"
    gsettings set org.gnome.shell.keybindings screenshot-window "[]"
    gsettings set org.gnome.shell.keybindings show-screenshot-ui "[]"
    gsettings set org.gnome.desktop.wm.keybindings activate-window-menu "['Menu']"
    gsettings set org.gnome.desktop.wm.keybindings always-on-top  "[]"
    gsettings set org.gnome.desktop.wm.keybindings begin-move  "[]"
    gsettings set org.gnome.desktop.wm.keybindings begin-resize  "[]"
    gsettings set org.gnome.desktop.wm.keybindings close "['<Super>q']"
    gsettings set org.gnome.desktop.wm.keybindings cycle-group "['<Alt>grave']"
    gsettings set org.gnome.desktop.wm.keybindings cycle-group-backward "['<Shift><Alt>grave']"
    gsettings set org.gnome.desktop.wm.keybindings cycle-panels  "[]"
    gsettings set org.gnome.desktop.wm.keybindings cycle-panels-backward  "[]"
    gsettings set org.gnome.desktop.wm.keybindings cycle-windows  "[]"
    gsettings set org.gnome.desktop.wm.keybindings cycle-windows-backward  "[]"
    gsettings set org.gnome.desktop.wm.keybindings lower  "[]"
    gsettings set org.gnome.desktop.wm.keybindings maximize  "[]"
    gsettings set org.gnome.desktop.wm.keybindings maximize-horizontally  "[]"
    gsettings set org.gnome.desktop.wm.keybindings maximize-vertically  "[]"
    gsettings set org.gnome.desktop.wm.keybindings minimize "['<Super>z']"
    gsettings set org.gnome.desktop.wm.keybindings move-to-center  "[]"
    gsettings set org.gnome.desktop.wm.keybindings move-to-corner-ne  "[]"
    gsettings set org.gnome.desktop.wm.keybindings move-to-corner-nw  "[]"
    gsettings set org.gnome.desktop.wm.keybindings move-to-corner-se  "[]"
    gsettings set org.gnome.desktop.wm.keybindings move-to-corner-sw  "[]"
    gsettings set org.gnome.desktop.wm.keybindings move-to-monitor-down  "[]"
    gsettings set org.gnome.desktop.wm.keybindings move-to-monitor-left  "[]"
    gsettings set org.gnome.desktop.wm.keybindings move-to-monitor-right  "[]"
    gsettings set org.gnome.desktop.wm.keybindings move-to-monitor-up  "[]"
    gsettings set org.gnome.desktop.wm.keybindings move-to-side-e  "[]"
    gsettings set org.gnome.desktop.wm.keybindings move-to-side-n  "[]"
    gsettings set org.gnome.desktop.wm.keybindings move-to-side-s  "[]"
    gsettings set org.gnome.desktop.wm.keybindings move-to-side-w  "[]"
    gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-1 "[]"
    gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-10  "[]"
    gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-11  "[]"
    gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-12  "[]"
    gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-2  "[]"
    gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-3  "[]"
    gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-4  "[]"
    gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-5  "[]"
    gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-6  "[]"
    gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-7  "[]"
    gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-8  "[]"
    gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-9  "[]"
    gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-down  "[]"
    gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-last  "[]"
    gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-left "['<Shift><Control>Home']"
    gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-right "['<Shift><Control>End']"
    gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-up  "[]"
    gsettings set org.gnome.desktop.wm.keybindings panel-main-menu  "[]"
    gsettings set org.gnome.desktop.wm.keybindings panel-run-dialog "['<Alt>F2']"
    gsettings set org.gnome.desktop.wm.keybindings raise  "[]"
    gsettings set org.gnome.desktop.wm.keybindings raise-or-lower  "[]"
    gsettings set org.gnome.desktop.wm.keybindings set-spew-mark  "[]"
    gsettings set org.gnome.desktop.wm.keybindings show-desktop  "[]"
    gsettings set org.gnome.desktop.wm.keybindings switch-applications "['<Alt>Tab']"
    gsettings set org.gnome.desktop.wm.keybindings switch-applications-backward "['<Shift><Alt>Tab']"
    gsettings set org.gnome.desktop.wm.keybindings switch-windows "[]"
    gsettings set org.gnome.desktop.wm.keybindings switch-windows-backward "[]"
    gsettings set org.gnome.desktop.wm.keybindings switch-group "[]"
    gsettings set org.gnome.desktop.wm.keybindings switch-group-backward  "[]"
    gsettings set org.gnome.desktop.wm.keybindings switch-input-source "['<Super>space']"
    gsettings set org.gnome.desktop.wm.keybindings switch-input-source-backward "['<Shift><Super>space']"
    gsettings set org.gnome.desktop.wm.keybindings switch-panels "[]"
    gsettings set org.gnome.desktop.wm.keybindings switch-panels-backward "[]"
    gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-1 "[]"
    gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-10 "[]"
    gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-11 "[]"
    gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-12 "[]"
    gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-2 "[]"
    gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-3 "[]"
    gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-4 "[]"
    gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-5 "[]"
    gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-6 "[]"
    gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-7 "[]"
    gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-8 "[]"
    gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-9 "[]"
    gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-down "[]"
    gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-last "[]"
    gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-left "['<Control>Home']"
    gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-right "['<Control>End']"
    gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-up "[]"
    gsettings set org.gnome.desktop.wm.keybindings switch-windows "[]"
    gsettings set org.gnome.desktop.wm.keybindings switch-windows-backward "[]"
    gsettings set org.gnome.desktop.wm.keybindings toggle-above "[]"
    gsettings set org.gnome.desktop.wm.keybindings toggle-fullscreen "[]"
    gsettings set org.gnome.desktop.wm.keybindings toggle-maximized "['<Super>x']"
    gsettings set org.gnome.desktop.wm.keybindings toggle-on-all-workspaces "[]"
    gsettings set org.gnome.desktop.wm.keybindings unmaximize "[]"
    gsettings set org.gnome.desktop.wm.preferences mouse-button-modifier '<Super>'
    gsettings set org.gnome.desktop.wm.preferences workspace-names  "[]"
fi

# write everything to disk to prevent unpredictable behaviour
#  this might not be needed, but better to be explicit than implicit
sync

_echo-success "Done."
