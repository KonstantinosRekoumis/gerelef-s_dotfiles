#!/usr/bin/env bash

# do NOT use this for anything else other than echoing from a call whose stdout is meant to be caught!
# use _echo-debug for debug information, and _echo-important and friends for everything else
# https://stackoverflow.com/questions/2990414/echo-that-outputs-to-stderr
_echo-stderr () (
    echo "$@" 1>&2
)

ask-user-multiple-choice () (
    # $1 onwards should be the options users have in detail
    # output is in stdout, so we need to capture that;
    #  unfortunately, (one of) the only sane way(s) to still output
    #  while capturing stdout, is to output to stderr
    readonly args=($@)
    readonly range="[0-$(($#-1))]"

    while : ; do
        i=0
        for option in "$@"; do
            _echo-stderr "$((i++)). $option"
        done
        read -p "Choice $range: " -r
        if [[ $REPLY =~ ^[0-9][0-9]*$ && $REPLY -lt $# ]]; then
            _echo-stderr ""
            if ! ask-user "Are you sure you want to pick \"${args[$REPLY]}\"?"; then continue; fi

            echo "$REPLY"
            return
        fi
        _echo-stderr ""
        _echo-stderr "Invalid reply > $REPLY, please answer in the range of $range."
    done
)

# run only if this file is not sourced
[[ "${BASH_SOURCE[0]}" == "${0}" ]] && ask-user-multiple-choice "$@"
